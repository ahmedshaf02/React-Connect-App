
import {ADD_PRODUCT_DATA,ADD_TO_CART,ADD_TO_ORDERED,REMOVE_PRODUCT_DATA,MODIFY_PRODUCT_DATA,SUBMIT_MODIFY_DATA,}  from "./actionTypes"


export const addToCart = (payload)=>({
      type:ADD_TO_CART,
      payload
})
export const removeProductData = (payload)=>({
      type:REMOVE_PRODUCT_DATA,
      payload
})
export const modifyProductData = (payload)=>({
      type:MODIFY_PRODUCT_DATA,
      payload:{title:payload, status:false,id:uuidv4()}
})
export const submitModifyData = (payload)=>({
      type:SUBMIT_MODIFY_DATA,
      payload:payload
})
export const addProduct = (payload)=>({
      type:ADD_PRODUCT_DATA,
      payload:payload
})
export const addOrderProduct = (payload)=>({
      type:ADD_TO_ORDERED,
      payload:payload
})

export const ADD_TO_CART  = "ADD_TO_CART";
export const ADD_PRODUCT_DATA  = "ADD_PRODUCT_DATA";
export const REMOVE_PRODUCT_DATA = "REMOVE_PRODUCT_DATA"
export const MODIFY_PRODUCT_DATA = "MODIFY_PRODUCT_DATA"
export const SUBMIT_MODIFY_DATA = "SUBMIT_MODIFY_DATA"
export const ADD_TO_ORDERED = "ADD_TO_ORDERED"

import {ADD_PRODUCT_DATA,ADD_TO_CART,ADD_TO_ORDERED,REMOVE_PRODUCT_DATA,MODIFY_PRODUCT_DATA,SUBMIT_MODIFY_DATA} from "./actionTypes"


 export const initState = {
  productData:[
  ],
  modifyData:[],
  modifyCount:0,
  removeCOunt:0,
  cartArrData:[],
  ordereArrData:[]

}


export default (state=initState, {type,payload})=>{

  switch(type){
    case ADD_PRODUCT_DATA:
      return{
        ...state,
        productData:[...state.productData,payload]
      }

    case REMOVE_PRODUCT_DATA:
      return{
        ...state,
        productData: state.productData.filter(ele=>ele.id!==payload)
      }
    case MODIFY_PRODUCT_DATA:
      return{
        ...state,
        modifyData:state.productData.find(ele=>ele.id === payload)
      }
    case SUBMIT_MODIFY_DATA:
      return{
        ...state,
        productData:state.productData.map(ele=>ele.id === state.modifyData.id?{...payload}:ele),
        nonComplete:state.todo.filter(ele=>ele.status === payload)
      }
    case ADD_TO_CART:
      return{
        ...state,
        cartArrData:[...state.cartArrData, payload]
      }
    case ADD_TO_ORDERED:
      return{
        ...state,
        ordereArrData:[...state.ordereArrData,payload]
      }
    // case ADD_PRODUCT_CATEGORY:
    //   return{
    //     ...state,
    //     productData:[...state.productData,category:{...productData.category,payload}]
    //   }
    default:
      return state
  }

}